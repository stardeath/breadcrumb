<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:infrastructure="clr-namespace:BreadcrumbLib.Infrastructure"
    xmlns:local="clr-namespace:BreadcrumbLib">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/BreadcrumbLib;Component/Themes/Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Geometry x:Key="NormalArrow">M0,0 L4,3.5 0,7 z</Geometry>
    <Geometry x:Key="ExpandedArrow">M0,3 L7,3 3.5,7 z</Geometry>

    <infrastructure:ImageToImageConverter x:Key="ImageToImageConverter" />
    <infrastructure:DebugConverter x:Key="DebugConverter" />


    <ControlTemplate x:Key="BaseBreadcrumbButton" TargetType="{x:Type Button}">
        <Border
            x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center" />
        </Border>
    </ControlTemplate>


    <ControlTemplate x:Key="BreadcrumbArrowButton" TargetType="{x:Type ToggleButton}">
        <Border
            x:Name="border"
            MinWidth="12"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Path
                x:Name="path"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="{StaticResource NormalArrow}"
                Fill="#FF000000"
                IsHitTestVisible="False" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="path" Property="Data" Value="{StaticResource ExpandedArrow}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="path" Property="Data" Value="{StaticResource ExpandedArrow}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="{x:Type local:BreadcrumbButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:BreadcrumbButton}">
                    <StackPanel
                        x:Name="stackPanel"
                        Background="#FFFFFFFF"
                        Orientation="Horizontal"
                        SnapsToDevicePixels="True">
                        <StackPanel.Resources>
                            <BooleanToVisibilityConverter x:Key="boolToVis" />
                            <infrastructure:DebugConverter x:Key="DebugConverter" />
                        </StackPanel.Resources>
                        <ContentPresenter
                            x:Name="image"
                            Content="{Binding Path=View.SelectedItem.Image, Mode=Default}"
                            Visibility="Collapsed" />
                        <Path
                            x:Name="path"
                            Margin="0,-0.5,0,-0.5"
                            Data="m0,0 v1"
                            Stretch="Fill"
                            Stroke="#FF3C80B0"
                            StrokeThickness="1"
                            Visibility="Hidden" />
                        <Button
                            x:Name="button"
                            Padding="5,0,5,0"
                            Background="{x:Null}"
                            BorderBrush="#FFFFFFFF"
                            BorderThickness="1,1,1,1"
                            Command="{x:Static local:BreadcrumbButton.GoToCommand}"
                            CommandParameter="{Binding}"
                            Content="{Binding Path=Header}"
                            Focusable="False"
                            RenderTransformOrigin="0.5,0.5"
                            Template="{StaticResource BaseBreadcrumbButton}" />
                        <Path
                            x:Name="path1"
                            Margin="0,-0.5,0,-0.5"
                            Data="M0,0 V1"
                            Stretch="Fill"
                            Stroke="#FF3C80B0"
                            Visibility="Hidden" />
                        <ToggleButton
                            x:Name="buttonExpand"
                            Background="#FFFFFFFF"
                            BorderBrush="#FFFFFFFF"
                            BorderThickness="1,1,1,1"
                            ClickMode="Press"
                            Focusable="False"
                            IsChecked="{Binding Path=IsExpanded}"
                            Template="{StaticResource BreadcrumbArrowButton}"
                            Visibility="{Binding Path=HasItems, Converter={StaticResource boolToVis}}">
                            <ToggleButton.ContextMenu>
                                <ContextMenu
                                    Background="#FFFFFFFF"
                                    x:Name="menu"
                                    IsOpen="{Binding Path=IsExpanded}"
                                    ItemsSource="{Binding Path=Items}"
                                    Style="{DynamicResource MaterialDesignContextMenu}">
                                    <ContextMenu.Resources>
                                        <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                                            <Setter Property="Command" Value="{x:Static local:BreadcrumbButton.InvokeMenuCommand}" />
                                            <Setter Property="CommandParameter" Value="{Binding}" />
                                            <Setter Property="Icon" Value="{Binding Path=Image, Converter={StaticResource ImageToImageConverter}}" />
                                        </Style>
                                    </ContextMenu.Resources>

                                    <ContextMenu.CommandBindings>
                                        <CommandBinding Command="{x:Static local:BreadcrumbButton.GoToCommand}" />
                                    </ContextMenu.CommandBindings>
                                </ContextMenu>
                            </ToggleButton.ContextMenu>
                        </ToggleButton>
                        <Path
                            x:Name="path2"
                            Margin="0,-0.5,0,-0.5"
                            Data="M0,0 V1"
                            Stretch="Fill"
                            Stroke="#FF3C80B0"
                            Visibility="Hidden" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsFirst}" Value="True">
                            <Setter TargetName="image" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="button" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <!--<GradientStop Color="#FFFFFFFF" Offset="0"/>-->
                                        <GradientStop Offset="1" Color="#FFCECECE" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="buttonExpand" Property="Background" Value="{StaticResource ButtonMouseOver}" />
                            <Setter TargetName="path" Property="Visibility" Value="Visible" />
                            <Setter TargetName="path1" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger SourceName="button" Property="IsMouseOver" Value="True">
                            <Setter TargetName="button" Property="Background" Value="{StaticResource ButtonMouseOver}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition SourceName="buttonExpand" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="path2" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger SourceName="buttonExpand" Property="IsChecked" Value="True">
                            <Setter TargetName="buttonExpand" Property="Background" Value="{StaticResource ButtonMouseOver}" />
                            <Setter TargetName="button" Property="Background" Value="{StaticResource ButtonMouseOver}" />
                            <Setter TargetName="path" Property="Visibility" Value="Visible" />
                            <Setter TargetName="path1" Property="Visibility" Value="Visible" />
                            <Setter TargetName="path2" Property="Visibility" Value="Visible" />
                            <Setter TargetName="buttonExpand" Property="BorderBrush" Value="{StaticResource BorderPressedBrush}" />
                            <Setter TargetName="buttonExpand" Property="BorderThickness" Value="1,1,0,0" />
                            <Setter TargetName="button" Property="BorderBrush" Value="{StaticResource BorderPressedBrush}" />
                            <Setter TargetName="button" Property="BorderThickness" Value="1,1,0,0" />
                            <Setter TargetName="buttonExpand" Property="Margin" Value="0,0,0,0" />
                            <!--<Setter Property="Padding" TargetName="buttonExpand" Value="0,-2,0,0"/>
							<Setter Property="Padding" TargetName="button" Value="6,0,5,0"/>-->
                        </Trigger>
                        <Trigger SourceName="button" Property="IsPressed" Value="True">
                            <Setter TargetName="buttonExpand" Property="Background" Value="{StaticResource ButtonMouseOver}" />
                            <Setter TargetName="button" Property="Background" Value="{StaticResource ButtonMouseOver}" />
                            <Setter TargetName="path" Property="Visibility" Value="Visible" />
                            <Setter TargetName="path1" Property="Visibility" Value="Visible" />
                            <Setter TargetName="path2" Property="Visibility" Value="Visible" />
                            <Setter TargetName="buttonExpand" Property="BorderBrush" Value="{StaticResource BorderPressedBrush}" />
                            <Setter TargetName="buttonExpand" Property="BorderThickness" Value="1,1,0,0" />
                            <Setter TargetName="button" Property="BorderThickness" Value="1,1,0,0" />
                            <!--<Setter Property="Margin" TargetName="buttonExpand" Value="0,0,0,0"/>
							<Setter Property="Padding" TargetName="buttonExpand" Value="-1,-2,0,0"/>-->
                            <Setter TargetName="button" Property="BorderBrush" Value="{StaticResource BorderPressedBrush}" />
                            <!--<Setter Property="Padding" TargetName="button" Value="6,0,5,0"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>